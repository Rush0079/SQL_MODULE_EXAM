create database exam;
use exam;

create table DEPT(DEPTNO int(2),DNAME varchar(15),LOC varchar(10));
insert into DEPT
VALUES(10,'ACCOUNTING','NEW YORK'),
(20 ,'RESEARCH','DALLAS'),
(30,'SALES','CHICAGO'),
(40,'OPERATIONS','BOSTON');

SELECT * FROM DEPT;

create table EMP(EMPNO int(4),ENAME varchar(10),JOB varchar(9),HIREDATE date,SAL float(7,2),COMM float(7,2),DEPTNO int(2));

insert into EMP
VALUES(7839,'KING','MANAGER','1991-11-17',5000,NULL,10),
(7698,'BLAKE','CLERK','1981-05-01',	2850,NULL,30),
(7782,'CLARK','MANAGER','1981-06-09',2450,NULL,10),
(7566,'JONES','CLERK','1981-04-02',2975,NULL,20),
(7654,'MARTIN',	'SALESMAN','1981-09-28',1250,1400,30),
(7499,'ALLEN','SALESMAN','1981-02-20',1600,300,30);

select * from EMP;

# 3. Display all the employees where SAL between 2500 and 5000 (inclusive of both).

	select * from EMP 
    WHERE SAL BETWEEN 2500 AND 5000;
    
# 4. Display all the ENAMEs in descending order of ENAME.

	select * from EMP 
    ORDER BY ENAME desc;
	
# 5. Display all the JOBs in lowercase.

	select lower(JOB) from EMP;

# 6. Display the ENAMEs and the lengths of the ENAMEs.
	
    select ENAME,LENGTH(ENAME) as length_of_Ename from emp;
	
# 7. Display the DEPTNO and the count of employees who belong to that DEPTNO .

	select DEPTNO,count(*) from EMP group by DEPTNO;
    
# 8. Display the DNAMEs and the ENAMEs who belong to that DNAME.

	select DNAME,ENAME from EMP,DEPT
    WHERE EMP.DEPTNO = DEPT.DEPTNO;
	
# 9. Display the position at which the string ‘AR’ occurs in the ename.

	select ENAME,POSITION('AR' IN ENAME)
    as First_Occurence_AR from emp;
    
# 10.Display the HRA for each employee given that HRA is 20% of SAL.

	select ENAME,SAL,SAL*0.2 as HRA from EMP;
    
    
-- section - 2
	-- 1.	Write a stored procedure by the name of PROC1 that accepts two varchar strings as parameters. 
			-- Your procedure should then determine if the first varchar string exists inside the varchar string. 
--             For example, if string1 = ‘DAC’ and string2 = ‘CDAC, then string1 exists inside string2.  
--             The stored procedure should insert the appropriate message into a suitable TEMPP output table.
--             Calling program for the stored procedure need not be written.


		 create table tempp
         (
         strname varchar(25),
         msg varchar(25),
         th varchar(25)
         );
        
        drop table tempp;
		delimiter //
        create procedure PROC1(string1 varchar(25),string2 varchar(25))
        begin
			if instr(string1,string2)
            then
            insert into tempp values(string1,string2,'present');
            else
			insert into tempp values(string1,string2,'absent');
            end if;
        end;//
        delimiter ;

		call PROC1("CDAC","DAC");
        call PROC1("CDAC","AAA");
        select * from tempp;
        
        drop procedure PROC1;
       
        
-- 2.	Create a stored function by the name of FUNC1 to take three parameters, the sides of a triangle. 
		-- The function should return a Boolean value:- TRUE if the triangle is valid, FALSE otherwise. 
--         A triangle is valid if the length of each side is less than the sum of the lengths of the other two sides.
--         Check if the dimensions entered can form a valid triangle. Calling program for the stored function 
--         need not be written.

		delimiter //
		create function FUNC1(a int,b int,z int)
		returns boolean
        deterministic
        begin
			declare y boolean;
            if(((a+b)<z) or ((a+z)<b) or((b+z)<a))
            then
            set y = false;
            return false;
            else
            set y = true;
            return true;
            end if;
            end;//
        delimiter ;
        drop function FUNC1;
        set @a = FUNC1(10,10,5);
        select @a from dual;